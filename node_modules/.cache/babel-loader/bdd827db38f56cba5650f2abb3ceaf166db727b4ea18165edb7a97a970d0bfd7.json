{"ast":null,"code":"import React,{useState,useMemo}from'react';import{Link}from'react-router-dom';import{usePokemon}from'../hooks/usePokemon';import styles from'../styles/GalleryView.module.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GalleryView=()=>{const{pokemonList,loading,error,types,filterByType}=usePokemon();const[selectedTypes,setSelectedTypes]=useState([]);const filteredPokemon=useMemo(()=>{return filterByType(pokemonList,selectedTypes);},[pokemonList,selectedTypes,filterByType]);const handleTypeToggle=typeName=>{setSelectedTypes(prev=>{if(prev.includes(typeName)){return prev.filter(t=>t!==typeName);}else{return[...prev,typeName];}});};const clearFilters=()=>{setSelectedTypes([]);};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:styles.loading,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.spinner}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading Pok\\xE9mon Gallery...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:styles.error,children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"div\",{className:styles.galleryView,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.header,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Pok\\xE9mon Gallery\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Browse beautiful Pok\\xE9mon artwork and filter by types\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.filterSection,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.filterHeader,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Filter by Type:\"}),selectedTypes.length>0&&/*#__PURE__*/_jsx(\"button\",{onClick:clearFilters,className:styles.clearButton,children:\"Clear All Filters\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.typeFilters,children:types.slice(0,18).map(typeName=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTypeToggle(typeName),className:\"\".concat(styles.typeFilter,\" \").concat(styles[typeName],\" \").concat(selectedTypes.includes(typeName)?styles.active:''),children:typeName},typeName))}),selectedTypes.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:styles.activeFilters,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Active filters: \"}),selectedTypes.map(type=>/*#__PURE__*/_jsxs(\"span\",{className:\"\".concat(styles.activeFilterTag,\" \").concat(styles[type]),children:[type,/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTypeToggle(type),className:styles.removeFilter,children:\"\\xD7\"})]},type))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.resultsCount,children:[\"Showing \",filteredPokemon.length,\" Pok\\xE9mon\",selectedTypes.length>0&&\" with type\".concat(selectedTypes.length>1?'s':'',\": \").concat(selectedTypes.join(', '))]}),/*#__PURE__*/_jsx(\"div\",{className:styles.gallery,children:filteredPokemon.map(pokemon=>/*#__PURE__*/_jsx(Link,{to:\"/pokemon/\".concat(pokemon.id),className:styles.galleryItem,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.imageContainer,children:[/*#__PURE__*/_jsx(\"img\",{src:pokemon.sprites.other['official-artwork'].front_default||pokemon.sprites.front_default,alt:pokemon.name,className:styles.pokemonImage,loading:\"lazy\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.overlay,children:[/*#__PURE__*/_jsxs(\"h4\",{className:styles.pokemonName,children:[\"#\",pokemon.id.toString().padStart(3,'0')]}),/*#__PURE__*/_jsx(\"h3\",{children:pokemon.name}),/*#__PURE__*/_jsx(\"div\",{className:styles.types,children:pokemon.types.map(type=>/*#__PURE__*/_jsx(\"span\",{className:\"\".concat(styles.typeTag,\" \").concat(styles[type.type.name]),children:type.type.name},type.type.name))})]})]})},pokemon.id))}),filteredPokemon.length===0&&selectedTypes.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:styles.noResults,children:[/*#__PURE__*/_jsx(\"p\",{children:\"No Pok\\xE9mon found with the selected type(s)\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Try selecting different types or clear filters to see all Pok\\xE9mon\"})]})]});};export default GalleryView;","map":{"version":3,"names":["React","useState","useMemo","Link","usePokemon","styles","jsx","_jsx","jsxs","_jsxs","GalleryView","pokemonList","loading","error","types","filterByType","selectedTypes","setSelectedTypes","filteredPokemon","handleTypeToggle","typeName","prev","includes","filter","t","clearFilters","className","children","spinner","galleryView","header","filterSection","filterHeader","length","onClick","clearButton","typeFilters","slice","map","concat","typeFilter","active","activeFilters","type","activeFilterTag","removeFilter","resultsCount","join","gallery","pokemon","to","id","galleryItem","imageContainer","src","sprites","other","front_default","alt","name","pokemonImage","overlay","pokemonName","toString","padStart","typeTag","noResults"],"sources":["/Users/deepthikondaveeti/Documents/Repos/CHI/mp2/src/pages/GalleryView.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { usePokemon } from '../hooks/usePokemon';\nimport styles from '../styles/GalleryView.module.css';\n\nconst GalleryView: React.FC = () => {\n  const { pokemonList, loading, error, types, filterByType } = usePokemon();\n  const [selectedTypes, setSelectedTypes] = useState<string[]>([]);\n\n  const filteredPokemon = useMemo(() => {\n    return filterByType(pokemonList, selectedTypes);\n  }, [pokemonList, selectedTypes, filterByType]);\n\n  const handleTypeToggle = (typeName: string) => {\n    setSelectedTypes(prev => {\n      if (prev.includes(typeName)) {\n        return prev.filter(t => t !== typeName);\n      } else {\n        return [...prev, typeName];\n      }\n    });\n  };\n\n  const clearFilters = () => {\n    setSelectedTypes([]);\n  };\n\n  if (loading) {\n    return (\n      <div className={styles.loading}>\n        <div className={styles.spinner}></div>\n        <p>Loading Pokémon Gallery...</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div className={styles.error}>Error: {error}</div>;\n  }\n\n  return (\n    <div className={styles.galleryView}>\n      <div className={styles.header}>\n        <h1>Pokémon Gallery</h1>\n        <p>Browse beautiful Pokémon artwork and filter by types</p>\n      </div>\n\n      <div className={styles.filterSection}>\n        <div className={styles.filterHeader}>\n          <h3>Filter by Type:</h3>\n          {selectedTypes.length > 0 && (\n            <button onClick={clearFilters} className={styles.clearButton}>\n              Clear All Filters\n            </button>\n          )}\n        </div>\n        \n        <div className={styles.typeFilters}>\n          {types.slice(0, 18).map((typeName) => (\n            <button\n              key={typeName}\n              onClick={() => handleTypeToggle(typeName)}\n              className={`${styles.typeFilter} ${styles[typeName]} ${\n                selectedTypes.includes(typeName) ? styles.active : ''\n              }`}\n            >\n              {typeName}\n            </button>\n          ))}\n        </div>\n        \n        {selectedTypes.length > 0 && (\n          <div className={styles.activeFilters}>\n            <span>Active filters: </span>\n            {selectedTypes.map(type => (\n              <span key={type} className={`${styles.activeFilterTag} ${styles[type]}`}>\n                {type}\n                <button \n                  onClick={() => handleTypeToggle(type)}\n                  className={styles.removeFilter}\n                >\n                  ×\n                </button>\n              </span>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <div className={styles.resultsCount}>\n        Showing {filteredPokemon.length} Pokémon\n        {selectedTypes.length > 0 && ` with type${selectedTypes.length > 1 ? 's' : ''}: ${selectedTypes.join(', ')}`}\n      </div>\n\n      <div className={styles.gallery}>\n        {filteredPokemon.map((pokemon) => (\n          <Link\n            key={pokemon.id}\n            to={`/pokemon/${pokemon.id}`}\n            className={styles.galleryItem}\n          >\n            <div className={styles.imageContainer}>\n              <img\n                src={pokemon.sprites.other['official-artwork'].front_default || pokemon.sprites.front_default}\n                alt={pokemon.name}\n                className={styles.pokemonImage}\n                loading=\"lazy\"\n              />\n              <div className={styles.overlay}>\n                <h4 className={styles.pokemonName}>\n                  #{pokemon.id.toString().padStart(3, '0')}\n                </h4>\n                <h3>{pokemon.name}</h3>\n                <div className={styles.types}>\n                  {pokemon.types.map((type) => (\n                    <span\n                      key={type.type.name}\n                      className={`${styles.typeTag} ${styles[type.type.name]}`}\n                    >\n                      {type.type.name}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n\n      {filteredPokemon.length === 0 && selectedTypes.length > 0 && (\n        <div className={styles.noResults}>\n          <p>No Pokémon found with the selected type(s)</p>\n          <p>Try selecting different types or clear filters to see all Pokémon</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GalleryView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}